@page "/"

@using DanilvarKanji.Client.Data
@using DanilvarKanji.Client.Localization.LocaleKeys
@using DanilvarKanji.Client.Services.Characters
@using DanilvarKanji.Shared.Responses.Character

@inject IStringLocalizer<Index> Loc
@inject NavigationManager NavManager

<PageTitle>@AppDisplaySettings.AppTitle - @Loc[nameof(IndexLocaleKeys.HomeTitle)]</PageTitle>


<div class="text-center">

    <Authorized>
        <h1 class="display-4 txt-white main-font ">
            @Loc["Hello"],
            <b class="animated-blink">
                <GetUserName/>
            </b>
        </h1>
    </Authorized>

    <NotAuthorized>
        <h1 class="display-4 txt-white main-font ">
            @Loc[nameof(IndexLocaleKeys.WelcomeToApp)] <b class="animated-blink">@AppDisplaySettings.AppTitle</b>
        </h1>

        <NavLink href="register" class="btn three-d-btn no-outline">@Loc["Register"]</NavLink>
        <NavLink href="login" class="btn three-d-btn no-outline">@Loc["Login"]</NavLink>

    </NotAuthorized>

    @*<ScrollSection ImageSource="https://th.bing.com/th/id/OIG.OXBS3CECFtEOQyxwy7Vm?pid=ImgGn" Title="Some Text" Text="HAHAHHA"/>
    <ScrollSection ImageSource="https://th.bing.com/th/id/OIG.KwaNSjUB_tPiHkOFwxsf?pid=ImgGn" Title="Some Text" Text="HAHAHHA" FromRight="false"/>
    <ScrollSection ImageSource="https://th.bing.com/th/id/OIG.ieffDyC8ODj4idx7X4xL?pid=ImgGn" Title="Some Text" Text="HAHAHHA"/>
    *@

</div>

<Authorized>
    <h2 class="display-6 txt-white main-font">
        Your Study Queue
    </h2>
    <DisplayLearnQueue PageNumber="1" PageSize="10"/>

    <div class="ms-2">
        <button onclick="@(() => { if (character != null) {NavManager.NavigateTo($"/study-new/{character.Id}"); } })" 
                class="btn mid-three-d-btn no-outline">Study New</button>
    </div>

</Authorized>

@code
{
    [Inject]
    public required ICharacterService CharacterService { get; set; }

    private GetCharacterBaseInfoResponse? character;

    protected override async Task OnInitializedAsync()
    {
        await GetCharacterNextInLearn();
    }

    private async Task GetCharacterNextInLearn()
    {
        character = await CharacterService.GetNextInLearnQueue();
    }
    
}