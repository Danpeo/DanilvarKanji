@page "/Flashcards"
@using DanilvarKanji.Client.Data
@using DanilvarKanji.Client.Services.Flashcards
@using DanilvarKanji.Shared.Responses.Flashcards

<PageTitle>Flashcards - @AppDisplaySettings.AppTitle</PageTitle>

<h3 class="mb-5 display-3 txt-bright-pink main-font">Flashcards</h3>

<div class="d-flex">
    <button type="button" @onclick="@(() => NavigationManager.NavigateTo("/Add"))" class="btn btn-primary mb-2">
        Add New Collection
    </button>
</div>

@if (_flashcardCollections is null)
{
    <DisplayLoading/>
}
else if (!_flashcardCollections.Any())
{
    <Message Text="No collections found"/>
}
else
{
    @foreach (FlashcardCollectionResponse collection in _flashcardCollections)
    {
        <a class="pointer-cursor" @onclick="@(() => NavigationManager.NavigateTo($"Collection/{collection.Id}"))">

            <div class="col-md-3 mb-2">
                <div class="card bg-secondary-2">
                    <div class="card-body">
                        <p>@collection.Id</p>
                        <h1 class="card-title fs-3 mb-3 jap-font txt-mid-pink text-center">
                            @collection.Name
                        </h1>
                        <p class="fs-6">
                            @collection.Flashcards.Count flashcards
                        </p>
                    </div>
                </div>
            </div>
        </a>
    }
}

@code {
    [Inject] public required NavigationManager NavigationManager { get; set; }

    [Inject] public required IFlashcardApiService FlashcardApiService { get; set; }

    private List<FlashcardCollectionResponse>? _flashcardCollections;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _flashcardCollections = await FlashcardApiService.ListFlashcardCollectionsAsync();
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}

