@using DanilvarKanji.Domain.DTO
@using DanilvarKanji.Client.Extensions
@using DanilvarKanji.Shared.Responses.Character


<div class="d-flex">
    <button type="button" @onclick="@(() => NavigationManager.NavigateTo("/Characters/init-add"))" class="btn btn-primary mb-2">
        Add New
    </button>
</div>

<div class="input-group mb-2">
    <input @onkeydown="SearchForCharacterKey"
           @bind="_searchTerm"
           @bind:event="oninput"
           type="search"
           placeholder="Search for a character..."
           class="form-control bg-secondary-2 no-border txt-light-pink main-font"/>

    <div class="ms-2">
        <button @onclick="SearchForCharacter" class="btn btn-outline-primary" type="submit">Search</button>
    </div>
</div>

@if (_characterItems == null)
{
    <DisplayLoading/>
}
else if (!_characterItems.Any())
{
    <Message Text="No characters found"/>
}
else
{
    @foreach (GetAllFromCharacterResponse character in _characterItems)
    {
        <div class="col-md-3 mb-2">
            <HasAnyRole Roles="@(new[] { "Admin", "SuperAdmin" })">
                <button @onclick=@(async () => { await DeleteCharacter(character); }) class="btn btn-danger">
                    Delete
                </button>
            </HasAnyRole>
            <a class="pointer-cursor" @onclick="@(async () => await OnSelected.InvokeAsync(character))">
                <div class="card bg-secondary-2">
                    <div class="card-body">
                        <h1 class="card-title display-1 mb-3 jap-font txt-mid-pink text-center">
                            @if (character.Definition != null)
                            {
                                @character.Definition
                            }
                        </h1>

                        @if (_kanjiMeanings != null)
                        {
                            <DisplayKanjiMeanings KanjiMeanings="_kanjiMeanings" CharacterId="@character.Id"/>
                        }
                        @if (character.Kunyomis is {Count: > 0})
                        {
                            <p class="card-text txt-green-dim main-font">
                                <DisplayKunyomi Character="character" MaxReadingsToDisplay="3"/>
                            </p>
                        }
                        else
                        {
                            <p class="card-text txt-green-dim main-font">-----</p>
                        }
                        @if (character.Onyomis is {Count: > 0 })
                        {
                            <p class="card-text txt-green-dim main-font">
                                <DisplayOnyomi Character="character" MaxReadingsToDisplay="3"/>
                            </p>
                        }
                        else
                        {
                            <p class="card-text txt-green-dim main-font">-----</p>
                        }
                        <p class="card-text txt-gray">
                            JLPT @character.JlptLevel.GetDisplayName()
                        </p>
                    </div>
                </div>
            </a>
        </div>
    }
    if (string.IsNullOrEmpty(_searchTerm))
    {
        @*<div class="mt-3 mb-3 justify-content-center d-flex">
            <button type="button" class="mid-three-d-btn no-outline mb-4" @onclick="OnUpdateContentClick">
                $1$
                <i class="text-center gg-arrow-down-o"></i>
            #1#
                SHOW MORE
            </button>
        </div>*@
        <div class="d-grid gap-2 mb-4">
            <BigButton OnClickAsync="OnUpdateContentClick" Text="Show More"/>
        </div>
    }
}