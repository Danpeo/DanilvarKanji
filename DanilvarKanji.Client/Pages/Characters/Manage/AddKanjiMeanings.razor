@using DanilvarKanji.Domain.Entities

@foreach (KanjiMeaning meaning in Meanings)
{
    <div class="row">
        <div class="col mb-3">
            <div class="form-group">
                <InputNumber @bind-Value="@meaning.Priority" class="form-control bg-secondary txt-white no-border" id="meaningPriority" placeholder="Meaning Priority"/>
            </div>
        </div>
        @if (meaning.Definitions is not null)
        {
            <DynamicStringDefinition StringDefinitions="meaning.Definitions"></DynamicStringDefinition>
        }
        <div class="col mb-3">
            <button @onclick="@(() => Meanings.Remove(meaning))" class="btn btn-link" type="button">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill text-danger" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"/>
                </svg>
            </button>
        </div>
    </div>
}
<div class="row mt-3">
    <div class="col">
        <button class="btn btn-outline-primary" type="button" @onclick="@(() => Meanings.Add(new KanjiMeaning()))">Add</button>
    </div>
</div>

@code
{
    [Parameter, EditorRequired]
    public ICollection<KanjiMeaning> Meanings { get; set; } = default!;
}