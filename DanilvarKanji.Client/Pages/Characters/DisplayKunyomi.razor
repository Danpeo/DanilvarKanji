@using System.Text.RegularExpressions
@using DanilvarKanji.Shared.Responses.Character

@{
    System.Diagnostics.Debug.Assert(Character.Kunyomis != null, "Character.Kunyomis != null");
}

@{
    var kunyomiList = Character.Kunyomis.ToList();

    for (int i = 0; i < Math.Min(MaxReadingsToDisplay, kunyomiList.Count); i++)
    {
        string japaneseWriting = kunyomiList[i].JapaneseWriting;

        <HumanReadJapaneseWriting JapaneseWriting="@japaneseWriting" />
        
        @*// Given the input string '。abc', the regular expression would capture abc
        var regex = new Regex(@"\。([^)]+)");
        MatchCollection matches = regex.Matches(japaneseWriting);

        if (matches.Count > 0)
        {
            int startIndex = 0;

            foreach (Match match in matches)
            {
                int matchIndex = match.Index;
                int matchLength = match.Length;

                <span>@japaneseWriting.Substring(startIndex, matchIndex - startIndex)</span>

                <span class="txt-gray">@match.Groups[1].Value</span>

                startIndex = matchIndex + matchLength;
            }

            <span>@japaneseWriting.Substring(startIndex)</span>
        }
        else
        {
            @japaneseWriting
        }*@
        
        if (i < Math.Min(MaxReadingsToDisplay, kunyomiList.Count) - 1)
        {
            <span>、</span>
        }
    }
}

@code
{
    [Parameter, EditorRequired]
    public GetAllFromCharacterResponse Character { get; set; } = default!;

    [Parameter]
    public int MaxReadingsToDisplay { get; set; } = int.MaxValue;
}