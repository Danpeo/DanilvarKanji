@using DanilvarKanji.Shared.Responses.CharacterLearning
@inherits VerifyByPointingBase

@if (_onReadings != null)
{
  <BaseExercise OnForgot="OnForgot.Invoke">
    <WhatIsOnyomiOf CharacterForVerification="CharacterForVerification"/>

    <div class="d-grid gap-4">
      @for (var i = 0; i < _onReadings.RandomItems.Count; i++)
      {
        var reading = _onReadings.RandomItems[i];
        var buttonId = $"optionBtn_{i}";
        <button class="btn btn-dark txt-white btn-lg"
                style="font-size: 1.75rem"
                id="@buttonId"
                @onclick="() => CheckAnswer(reading, buttonId)">
          <HumanReadJapaneseWriting JapaneseWriting="@reading"/>
        </button>
      }
    </div>
  </BaseExercise>
}
else
{
  <DisplayLoading/>
}

@code {

  private RandomItemsInReviewResponse? _onReadings;

  protected override async Task OnInitializedAsync()
  {
    _onReadings =
      await CharacterLearningApiService.GetRandomOnReadingsInReviewAsync(CharacterForVerification.Id, OptionCount);
  }

  private async Task CheckAnswer(string reading, string? buttonId)
  {
    if (reading == _onReadings?.CorrectMeaning)
    {
      await OnCorrectAnswer(buttonId);
    }
    else
    {
      await OnIncorrectAnswer(buttonId);
    }
  }

}