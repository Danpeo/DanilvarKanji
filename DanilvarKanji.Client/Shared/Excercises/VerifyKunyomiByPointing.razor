@using DanilvarKanji.Shared.Responses.CharacterLearning

@inherits VerifyByPointingBase

@if (_kunReadings != null)
{
    <WhatIsMeaningOf CharacterForVerification="CharacterForVerification"/>

    <div class="d-grid gap-4">
        @for (var i = 0; i < _kunReadings.RandomItems.Count; i++)
        {
            string reading = _kunReadings.RandomItems[i];
            string buttonId = $"optionBtn_{i}";
            <button class="btn btn-dark btn-lg"
                    style="font-size: 1.75rem"
                    id="@buttonId"
                    @onclick="() => CheckAnswer(reading, buttonId)">
                <HumanReadJapaneseWriting JapaneseWriting="@reading"/>
            </button>
        }
    </div>
}
else
{
    <DisplayLoading/>
}

@code {

    private GetRandomItemsInReviewResponse? _kunReadings;

    protected override async Task OnInitializedAsync()
    {
        _kunReadings =
            await CharacterLearningService.GetRandomKunReadingsInReviewAsync(CharacterForVerification.Id, OptionCount);
    }

    private async Task CheckAnswer(string reading, string buttonId)
    {
        if (reading == _kunReadings?.CorrectMeaning)
        {
            await OnCorrectAnswer(buttonId);
        }
        else
        {
            await OnIncorrectAnswer(buttonId);
        }
    }

}